{"version":3,"sources":["components/Header/index.js","utils/auth.js","utils/mutations.js","components/Homepage/index.js","components/Footer/index.js","App.js","index.js"],"names":["Header","_jsx","children","AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","ADD_USER","gql","_templateObject","_taggedTemplateLiteral","_templateObject2","Homepage","_useState","useState","_useState2","_slicedToArray","firstName","setFirstName","_useState3","_useState4","lastName","setLastName","_useState5","_useState6","nickname","setNickname","_useState7","_useState8","email","setEmail","_useState9","_useState10","password","setPassword","_useMutation","useMutation","addUser","handleNewUserForm","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","mutationResponse","wrap","_context","prev","next","preventDefault","test","console","log","abrupt","variables","sent","data","auth","login","t0","error","stop","_x","apply","arguments","className","_jsxs","onSubmit","Input","onChange","target","type","placeholder","Button","colorScheme","Footer","httpLink","createHttpLink","uri","authLink","setContext","_","headers","_objectSpread","authorization","concat","client","ApolloClient","link","cache","InMemoryCache","App","ChakraProvider","ApolloProvider","Router","Routes","Route","path","element","_Fragment","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acc132ac.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header () {\r\n    return (\r\n        <header>\r\n            <h1>\r\n                This is a header say hi\r\n            </h1>\r\n        </header>\r\n    )\r\n};","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $nickname: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    addUser(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      nickname: $nickname\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN = gql`\r\nmutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport auth from '../../utils/auth';\r\nimport { ADD_USER } from '../../utils/mutations';\r\nimport { Input, Button } from '@chakra-ui/react';\r\n\r\nexport default function Homepage () {\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [nickname, setNickname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [addUser] = useMutation(ADD_USER);\r\n\r\n    const handleNewUserForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if(!emailRegex.test(email)) {\r\n            console.log('not valid email')\r\n            // add error display later\r\n        }\r\n\r\n        if (!firstName || !lastName || !nickname || !email || !password) {\r\n            console.log('all fields are required bud');\r\n            // add error display later\r\n            return;\r\n        }\r\n        try {\r\n        const mutationResponse = await addUser({\r\n            variables: {\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                nickname: nickname,\r\n                email: email,\r\n                password: password,\r\n            },\r\n        });\r\n        const token = mutationResponse.data.addUser.token;\r\n        auth.login(token);\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n    }\r\n\r\n    return (\r\n        <div className='formContainer'>\r\n            <form onSubmit={handleNewUserForm}>\r\n                <Input value={firstName} onChange={(e) => setFirstName(e.target.value)} type=\"text\" className='firstName' placeholder='enter your first name' />\r\n                <Input value={lastName} onChange={(e) => setLastName(e.target.value)} type=\"lastName\" className='lastName' placeholder='enter your last name' />\r\n                <Input value={nickname} onChange={(e) => setNickname(e.target.value)} className='nickname' placeholder='enter a nickname' /> \r\n                <Input value={email} onChange={(e) => setEmail(e.target.value)} className='email' placeholder='enter your email here' />\r\n                <Input value={password} onChange={(e) => setPassword(e.target.value)} className='password' placeholder='enter your password here' />\r\n                <Button className='submitbtn' type='submit' colorScheme=\"blue\">Create an Account</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\n export default function Footer () {\r\n    return (\r\n        <footer>\r\n            <h3>\r\n                This is the footer\r\n            </h3>\r\n        </footer>\r\n    )\r\n };","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from \"@apollo/client\";\nimport { setContext } from '@apollo/client/link/context';\nimport React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport Header from \"./components/Header\";\nimport Homepage from \"./components/Homepage\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <ApolloProvider client={client}>\n        <Router>\n          <Header />\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <>\n                  <Homepage />\n                </>\n              }\n            />\n          </Routes>\n          <Footer />\n        </Router>\n      </ApolloProvider>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}